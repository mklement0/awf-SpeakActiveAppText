<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>net.same2u.awf-SpeakActiveApp</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>2F5D4BE9-D32E-4B42-B013-913E47802764</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3E85F86E-06F9-4130-886D-BE9AE9FB8165</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>B42926FE-9AA1-4B0E-B8F4-17E422E8F719</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F4067CAA-229D-4E54-806D-6F80AE326A1D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>DA2D69BF-B764-4BB4-99AC-30DA28046A4A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>FE06729C-AEB7-49A3-8748-1849D5DE61BF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Michael Klement</string>
	<key>description</key>
	<string>Speaks the active application's text with a specific voice.</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Speak Text in Active App</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>speak</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Getting active voices...</string>
				<key>script</key>
				<string>read -r query &lt;&lt;&lt;"{query}"

kTempFile=/tmp/net.same2u.awf.SpeakSelection.${USER}.cache

if [[ -z $query ]]; then
  ./voices -bl &gt; "$kTempFile"
fi
IFS=$'\n' read -d '' -ra voiceNames &lt; "$kTempFile"

kDefaultVoiceItem="
&lt;item&gt;
  &lt;title&gt;default voice&lt;/title&gt;
  &lt;subtitle&gt;Speak selection with default voice&lt;/subtitle&gt;
  &lt;arg&gt;&lt;![CDATA[]]&gt;&lt;/arg&gt;
&lt;/item&gt;
"



# Turn on case-INsensitive matching.
items=''
[[ -z $query ]] &amp;&amp; items=$kDefaultVoiceItem
shopt -s nocasematch nocaseglob

for voiceName in "${voiceNames[@]}"; do

  if [[ $voiceName =~ ^"$query" ]]; then
    items+="
&lt;item&gt;
    &lt;title&gt;$voiceName&lt;/title&gt;
    &lt;subtitle&gt;Speak selection as $voiceName&lt;/subtitle&gt;
    &lt;arg&gt;&lt;![CDATA[$voiceName]]&gt;&lt;/arg&gt;
  &lt;/item&gt;
"

  fi

done

if [[ -n $query &amp;&amp; -z $items ]]; then

  items="
&lt;item&gt;
  &lt;title&gt;NO MATCHING VOICE&lt;/title&gt;
  &lt;subtitle&gt;No match found among the active voices.&lt;/subtitle&gt;
&lt;/item&gt;
"

fi

# Output resulting script-filter XML.
cat &lt;&lt;EOF
&lt;?xml version="1.0"?&gt;
&lt;items&gt;
  ${items}
&lt;/items&gt;
EOF
</string>
				<key>subtext</key>
				<string>If you specify a voice, it will become the default.</string>
				<key>title</key>
				<string>Speak selection in active app</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>B42926FE-9AA1-4B0E-B8F4-17E422E8F719</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>voice = "{query}"
if (!voice) voice = getDefaultVoiceName()

    // BE SURE THAT THE FOLLOWING IS CHECKED (TURNED ON) in System Preferences &gt; Dictation &amp; Speech &gt; Text to Speech:
  //     "Speak selected text when the key is pressed"
    // IF YOU HAVE *NOT* CUSTOMIZED THE DEFAULT KEYBOARD SHORTCUT - Option-Escape - NO FURTHER ACTION IS NEEDED.
  // OTHERWISE:
  // Specify the custom keyboard shortcut chosen below.
  // For a list of key codes:
  //   - see http://www.codemacs.com/coding/applescript/applescript-key-codes-reference.8288271.htm
  //   - OR use the free Key Codes application (https://itunes.apple.com/us/app/key-codes/id414568915?mt=12)
keyCode = 53  // 53 == ESC
optsModifiers = { using: [ 'option down' ] }; // a combination of 'option down', 'command down', 'control down', and 'shift down' - including the single quotes, and separated with commas.


// Create case-insensitive regex; the letter case in the bundle ID sometimes differs from the display name in System Preferences.
// Also note the 1 exception: 'Pipe Organ' is represented as 'Organ' in the bundle Id.
reTargetVoiceName = new RegExp(voice === 'Pipe Organ' ? 'Organ' : voice, 'i') 

// -- global vars
var app = Application.currentApplication(); app.includeStandardAdditions = true
var se = Application('System Events')

try {

  if (! reTargetVoiceName.test(getDefaultVoiceName())) { // Is the target voice NOT the current default voice?

  // Make the target voice the new default voice:
  app.doShellScript('./voices -q -d "' + voice + '"')

}

// Invoke the system's "Speak selected text when the key is pressed" service.
// If it's currently already speaking, playback is stopped.
toggleSpeaking()

} catch(e) {

  reportErr(e);

}

// Invoke the keyboard shortcut for the system's 'Speak selected text when the key is pressed' feature.
// Starts speaking, or, if speech is ongoing, stops speaking.
function toggleSpeaking() {
  se.keyCode(keyCode, optsModifiers)
}

function reportErr(e) {
  app.displayAlert(e.message, { as: 'critical' })
}

// Returns the default TTS voice's *name*, extracted from its *bundle ID*.
// Note that the letter case doesn't always reflect the case as shown in System
// Preferences (e.g., 'steffi' vs. 'Steffi')
// EXAMPLE
//   getDefaultVoiceName() // -&gt; e.g., 'Alex'   (extracted from bundle ID 'com.apple.speech.synthesis.voice.Alex')
//   getDefaultVoiceName() // -&gt; e.g., 'steffi' (extracted from bundle ID 'com.apple.speech.synthesis.voice.steffi.premium')
function getDefaultVoiceName() {
  ObjC.import('AppKit')
  return $.NSSpeechSynthesizer.defaultVoice.js
    .replace(/\.premium$/, '')
    .replace(/^.+\.(.+)$/, '$1')
    .replace(/^organ$/i, 'Pipe Organ') // The 1 EXCEPTION: display name 'Pipe Organ' maps to 'Organ' in the bundle name.
}
</string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>F4067CAA-229D-4E54-806D-6F80AE326A1D</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>3</integer>
				<key>argumenttext</key>
				<string>Alex</string>
				<key>hotkey</key>
				<integer>18</integer>
				<key>hotmod</key>
				<integer>524288</integer>
				<key>hotstring</key>
				<string>1</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>2F5D4BE9-D32E-4B42-B013-913E47802764</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>./toggleSpeaking '{query}'
</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3E85F86E-06F9-4130-886D-BE9AE9FB8165</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>3</integer>
				<key>argumenttext</key>
				<string>Vicki</string>
				<key>hotkey</key>
				<integer>19</integer>
				<key>hotmod</key>
				<integer>524288</integer>
				<key>hotstring</key>
				<string>2</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>DA2D69BF-B764-4BB4-99AC-30DA28046A4A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>./toggleSpeaking '{query}'
</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>FE06729C-AEB7-49A3-8748-1849D5DE61BF</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>2F5D4BE9-D32E-4B42-B013-913E47802764</key>
		<dict>
			<key>ypos</key>
			<real>450</real>
		</dict>
		<key>3E85F86E-06F9-4130-886D-BE9AE9FB8165</key>
		<dict>
			<key>ypos</key>
			<real>450</real>
		</dict>
		<key>B42926FE-9AA1-4B0E-B8F4-17E422E8F719</key>
		<dict>
			<key>ypos</key>
			<real>330</real>
		</dict>
		<key>DA2D69BF-B764-4BB4-99AC-30DA28046A4A</key>
		<dict>
			<key>ypos</key>
			<real>570</real>
		</dict>
		<key>F4067CAA-229D-4E54-806D-6F80AE326A1D</key>
		<dict>
			<key>ypos</key>
			<real>330</real>
		</dict>
		<key>FE06729C-AEB7-49A3-8748-1849D5DE61BF</key>
		<dict>
			<key>ypos</key>
			<real>570</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>https://github.com/mklement0/awf-SpeakActiveAppText</string>
</dict>
</plist>
